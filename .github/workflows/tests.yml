# Имя рабочего процесса, отображаемое на GitHub Actions
name: Test Python App

# Триггер: Запускать этот workflow при любом push в любую ветку репозитория
on: push

jobs:
  # Имя задания (может быть любым, 'ci' - common practice for Continuous Integration)
  ci:
    # Указываем тип виртуальной машины, на которой будет выполняться задание
    # 'ubuntu-latest' - последняя стабильная версия Ubuntu Linux
    runs-on: ubuntu-latest

    # Последовательность шагов, выполняемых в рамках задания 'ci'
    steps:
      # Шаг 1: Получение кода репозитория
      # Используем стандартное действие 'checkout' для загрузки кода
      # на виртуальную машину, чтобы workflow мог с ним работать.
      # v4 - это версия действия, рекомендуется использовать актуальные версии.
      - name: Checkout repository code
        uses: actions/checkout@v4

      # Шаг 2: Настройка среды Python
      # Используем стандартное действие 'setup-python' для установки
      # нужной версии Python и добавления её в PATH.
      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          # Указываем версию Python, как требовалось в лабораторной (3.12)
          python-version: '3.12'

      # Шаг 3: Установка зависимостей
      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest httpx

      # !!! НОВЫЙ ШАГ ДЛЯ ПРЯМОЙ ПРОВЕРКИ ИМПОРТА !!!
      - name: Direct Import Verification
        run: |
          echo "--- Current Directory: $(pwd) ---"
          echo "--- Root Listing: ---"
          ls -la .
          echo "--- src/ Listing: ---"
          ls -la src/
          echo "--- Attempting direct imports ---"
          # Запускаем Python и пытаемся импортировать модули, вызывающие проблемы
          # Добавляем текущую директорию в sys.path, как мы делали в тесте
          python -c "import sys; sys.path.insert(0, '.'); print(' PYTHONPATH:', sys.path); import src.settings; print(' Imported src.settings OK'); import src.main; print(' Imported src.main OK')"

      # Шаг 4: Запуск тестов (остается без изменений)
      - name: Run tests with pytest
        # Мы удалили env: PYTHONPATH: '.' ранее, оставляем так
        run: python -m pytest tests/
