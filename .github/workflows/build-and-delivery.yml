name: Build and Delivery # Имя рабочего процесса

on:
  workflow_run: # Правило: запускаться после завершения другого workflow
    workflows: ["Test Python App"] # Имя workflow, за которым следим (должно совпадать с 'name' в tests.yml)
    branches: [main] # Только если тот workflow был запущен на ветке main
    types:
      - completed # Запускаться только когда тот workflow ЗАВЕРШИЛСЯ

jobs:
  cd: # Имя задания
    runs-on: ubuntu-latest # Тип машины
    # Условие: запускать это задание, только если workflow 'Test Python App'
    # на ветке main завершился УСПЕШНО ('success').
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      # Шаг 1: Получение кода репозитория (нужен для сборки Docker образа)
      - name: Checkout
        uses: actions/checkout@v4

      # Шаг 2: Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          # Используем переменные/секреты GitHub Actions
          username: ${{ vars.DOCKERHUB_USERNAME }} # Переменная окружения репозитория
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Секрет репозитория

      # Шаг 3: Сборка и публикация образа Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Контекст сборки - корневая папка репозитория (где лежит Dockerfile)
          push: true # Публиковать образ после сборки
          # Тегирование образа: <ваш_логин_dockerhub>/my-app:latest
          tags: ${{ vars.DOCKERHUB_USERNAME  }}/my-app:latest
